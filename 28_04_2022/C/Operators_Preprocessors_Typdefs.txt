===================  OPERATORS ========================

Evaluate the expression in a step by step way based on operator precedence and associativity

1) printf("%d\n",1==5==5);
     Explaination: 
          1==5----> 0
          0==5 ----->0
   O/p: 0
  
2) int i =0;
   printf("%d %d",i,i++);
   
   O/p : 1 0
        
3) int x=5;
   printf("%d %d %d\n",x++,x++,x++);
   
  O/p : 7 6 5

4) int x=2;
   printf("%d   ",++x++);
   printf("%d\n",x++);
 
O/p : lvalue error

5) int k=1;
   printf("%d==1 is ""%s\n",k,k==1?"TRUE":"FALSE");
   Explaination : 
       k==1 is true so "TRUE" string print
  O/p: k==1 is TRUE

6) int i=5;
   i=i++ - --i + ++i;
  
O/p : 6

7) int a=7;
   a+=a+=a-=6;
   printf("%d\n",a);
  Explaination :
       a-=6--->a=1;
       a+=a---->a=2;
       a+=a----->a=4;
 O/p : 4

8) int x=10,y=5,p,q;
   p=x>9;
   q=p||(x=5,y=10);
   printf("%d %d %d\n",q,x,y);
   
   Explaination: p = x>9----> 10>9 (true)  ; p =1;
                          q = p || (x=5,y=10);-----> q = 1;(in OR operator one is true remaing need not to check)
      O/p: 1 10 5

9) int x=2,y=1;
   y+=x<<=2;
   printf("%d %d\n",x,y);
   Explaination :
    x=x<<2 // x=8;
    y+=8//y=y+8//y=1+8=9
	O/p  : 8 9
  
10) int x=2,y=4,z;
    z=y++*x++|y--;
    printf("%d\n",z);
    Explaination:
      z = 4 * 2 | 5;
      z = 8 | 5;  z= 13
      O/p : 13

11) int a=5,b=6,c=7,d;
    d=a&=b&=c&&a;
    printf("%d\n",d);
   Explaination:
       c&&a = 1
      b&1---> 0
      a &0-->0
   
   O/p : 0

12) int i=10;
    i=(10<10)?(10>=10)?(10<=10)?1:2:3:4;
    printf("%d\n",i);
    
    Explaination:
       First (10<10) fail So
       O/p : 4

13) int a=10,b=20;
    a=(a>5||b=6?40:50); //Here get lvalue error
    printf("%d\n",a);
    
14) printf("%x\n",-1>>4);
    printf("%x\n",-1<<4);
    Explaination:
          	-1 = ffff ffff
	-1<<4 = ffff fff0
	-1>>4 = ffff ffff (here -1 negative number so last bit not change to zero)

15) int x=7;
    x=(x<<=x%2);
    printf("%d\n",x);
   Explaination:
        x%2 = 1;
      x <<1---> 7<<1 = 14
  O/p : 14

16) int a=2,b=5,c=1;
    printf("%d\n",(b>=a>=c?1:0));
    Explaination:
         c?1:0//--> 1
         a>=1//a=a>1(TRUE)//a=1;
         b>=1//b=b>1(TRUE)//b=1;
O/p: 1

17) int a=5;
    a=a-~a +1;
    printf("%d\n",a);
  Explaination:
   ~a = -6;
    a= 5-(-6)+1;

  O/p: 12

18) a=b=c=1;
    x=--a||++b*(3-1)/2&&b*(--c/3);
    printf("%d\n",x);
   Explaination:
    x= 0||2- 2/2 &&2*0
    x= 1-1&&0
    x = 0&&0
    O/p : x=0

19) a=10
    b = -5
    c = 2.5
    printf("%d %d",sizeof(a) + sizeof((++b) *c, b);
    Explaination:
       
20) int i=5;
    i=i++ - i
    printf("%d",i);

   Explaination:  5 - 6
   O/p : -1

========================================= PREPROCESSORS AND MACROS ===========================

1) What will be the output of the C program?
#include<stdio.h>
#define CONDITION(i)\
printf("preprocessor works\n");                         
int main()
{
	CONDITION(0);
	return 0;
}
Explaination:
	preprocessor works
It just replace the code.

2) What will be the output of the C program?
#include<stdio.h>
# define loop while(true)
int main()
{
	loop;  
	printf("preprocessor-aptitude");
	return 0;
}
Explaination:
	error true is not defined

3) What will be the output of the C program?
#include<stdio.h>
# define x --5
int main()
{
	printf("%d",x);
	return 0;
}
Explaination:
    --5 show error (lvalue error)

4) What will be the output of the C program ?
#include<stdio.h>
#define sqr(x) ++x * ++x
int main()
{
	int a = 3, z;
	z = ++a * ++a;     
	a -= 3;
	printf("%d %d", sqr(a), z);
	return 0;
}
Explaination:
  z = 5*5;//z=25
  a=a-3;//a=6-3//a=3;
  sqa(3);
  ++a * ++a;//sqa(a) = 16
O/p : 16 25

5) What will be the output of the C program?
#include<stdio.h>                      
#define x 1+2
int main()
{
	int i;
	i = x * x * x;
	printf("%d",i);
}
Explaination:
  1+2*1+2*1+2
  1+2+2+2
  O/p : 7

6) What will be the output of the C program?
#include<stdio.h>
#define a =
int main()
{
	int num a 6;
	printf("%d",num);
	return 0;
}
Explaination:
     num = 6 ;
   O/p: 6

7) What will be the output of the C program?
#include<stdio.h>
#define fun(x,y) x*y
int main()
{
	int x = 2, y = 1;
	printf("%d",fun(x + 2, y - 1));
	return 0;
}
Explaination:
  2+2*1-1
  2+2-1
  O/p: 3

8) What will be the output of the C program?
#include<stdio.h>
int main()
{
	char DATE[15] = "Current Date";
	printf("%s\n", __DATE__ );
	return 0;
}
O/p : It print current date
 
9) What will be the output of the C program?
#include<stdio.h>
int main()
{
	char TIME[15] = "Current Time";
	printf("%s\n",__TIME__);
	return 0;
}
O/p : It print current time

10) What will be the output of the C program?
#include<stdio.h>
int main()
{	
	printf("Line :%d\n", __LINE__ );
	return 0;
}
  O/p : It print that line number when type "__LINE__"

11) What will be the output of the C program?
#include<stdio.h>
#define  preprocessor_works(x, y)  \
	printf(#x " and " #y " are great!\n")
int main(void) {
	preprocessor_works(you, me);
	return 0;
}
Explaination:
you ,me change in string by use # symbol
  you and me are great!
	#x,#y make string

12) What will be the output of the C program?
#include<stdio.h>
# define puts  "%s C preprocessor"
int main()
{
	printf(puts, puts);
	return 0;
}

13) What will be the output of the C program?
#include<stdio.h>
#define preprocessor(n) printf ("macro" #n " = %d", macro##n)
int main(void) {
	int macro25 = 47;
	preprocessor(25);
	return 0;
}
Explaination:
  n = 25
  macro##n = macro25
 So it print value of macro25 = 47

14) What will be the output of the C program?
#include<stdio.h>
#include<string.h>
#define MACRO(num) ++num 
int main()
{
	char *ptr = "preprocessor";
	int num =strlen(ptr);
	printf("%s  ", MACRO(ptr));
	printf("%d", MACRO(num));
	return 0;
}
Explaination:
  MACRO(ptr)
  ++ptr;//pointer value increased & it point next character
  MACRO(num)
  ++num;//num=12;after ++num,num=13
 O/p:
	reprocessor 13
15) What will be the output of the C program?
#include<stdio.h>
#define i 10
int main()
{
	#define i 20
	printf("%d",i);
	return 0;
}
   O/p : it show warning for redeclaration of "i" variable.

16) What will be the output of the C program?
#include<stdio.h>
#define clrscr() 50
int main()
{
	clrscr();
	printf("%d\n",clrscr());
	return 0;
}
O/p: It print 50 (replace the clrscr)

17) What will be the output of the C program?
#include<stdio.h>
#define int char
main()
{
	int i=5;
	printf ("sizeof (i) =%d", sizeof (i));
}
O/p: 
    1  (  It prints character size )

18) Write programs to understand the usage of below preprocessor directives.
#include, #if, #ifdef, #ifndef, #else, #elif, #endif, #define, #undef, #line, #error, and #pragma

===================================== TYPEDEF =========================================

1) In the following code, the P2 is Integer Pointer or Integer?
typedef int *ptr;
ptr p1, p2;
 Answer : Integer pointer

2)  In the following code what is 'P'?
typedef char *charp;
const charp P;
Answer:
 pointer to const

3) What is x in the following program?
#include<stdio.h>
int main()
{
    typedef char (*(*arrfptr[3])())[10];
    arrfptr x;
    return 0;
}

4) What is apfArithmatics in the below statement?
typedef int (*apfArithmatics[3])(int,int); 
Answer:
  apfArithmatics is array of function pointer with two integer parameter with integer return type.

5) What is pf in the below statement?
typedef int (*pf)(int);
Answer:
  pf is function pointer has one integer argument with integer return type

6) What do the following declarations mean?
typedef char *pc;
typedef pc fpc();
typedef fpc *pfpc;
typedef pfpc fpfpc();
typedef fpfpc *pfpfpc;
pfpfpc a[N];

7) Write few programs using typedef on structures and enums.